         ixml: SP, rule+SP, SP.

          -SP: (S; pragma)*.
	  
           -S: (whitespace; comment)*.
  -whitespace: -[Zs]; tab; lf; cr.
         -tab: -#9.
          -lf: -#a.
          -cr: -#d.
      comment: -"{", (cchar; comment)*, -"}".
       -cchar: ~["{}"].

       pragma: "[", @pmark?, @pname, (S, @pragma-data)?, "]".
       @pname: -QName; -UQName.
       -QName: -name, ':', -name.
      -UQName: 'Q{', -ns-name, '}', -name.
     -ns-name: ~["{}"; '"'; "'"]* { oversimplification }.
       @pmark: ["@^?"].
 @pragma-data: (pragma-chars; '[', pragma-chars, ']')*.
-pragma-chars: ~["[]"]*.

         rule: (mark, SP)?, name, S, ["=:"], S, -alts, (pragma, SP)?, ".".
        @mark: ["@^-"].
         alts: alt+([";|"], S).
          alt: term*(",", S).
        -term: factor;
               option;
               repeat0;
               repeat1.
      -factor: terminal;
               nonterminal;
               "(", S, alts, ")", S.
      repeat0: factor, "*", S, sep?.
      repeat1: factor, "+", S, sep?.
       option: factor, "?", S.
          sep: factor.
  nonterminal: (mark, SP)?, name, S.

    -terminal: literal; 
               charset.
      literal: quoted;
               encoded.
      -quoted: (tmark, SP)?, -string.

        @name: namestart, namefollower*.
   -namestart: ["_"; Ll; Lu; Lm; Lt; Lo].
-namefollower: namestart; ["-.·‿⁀"; Nd; Mn].

       @tmark: ["^-"].
       string: -'"', dstring, -'"', S;
               -"'", sstring, -"'", S.
     @dstring: dchar+.
     @sstring: schar+.
        dchar: ~['"'];
               '"', -'"'. {all characters, quotes must be doubled}
        schar: ~["'"];
               "'", -"'". {all characters, quotes must be doubled}
     -encoded: (tmark, SP)?, -"#", @hex, S.
          hex: ["0"-"9"; "a"-"f"; "A"-"F"]+.

     -charset: inclusion; 
               exclusion.
    inclusion: (tmark, SP)?,         set.
    exclusion: (tmark, SP)?, "~", S, set.
         -set: "[", S,  member*([";|"], S), "]", S.
      -member: literal;
               range;
               class.
        range: from, "-", S, to.
        @from: character.
          @to: character.
   -character: -'"', dchar, -'"', S;
               -"'", schar, -"'", S;
               "#", hex, S.
        class: code, S.
        @code: capital, letter?.
     -capital: ["A"-"Z"].
      -letter: ["a"-"z"].
